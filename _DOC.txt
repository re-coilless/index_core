[WARNING] THIS ENTIRE DOC IS HOPELESSLY OBSOLETE!!!

[GENERAL]
Changes to vanilla game:
- quick/quickest are marked by negative y coord
- custom red blinking
- inventoryisopened does not work
- gamepickupitem does not work
- InventoryGuiComponent and ItemPickUpperComponent are permananetly disabled
- fungal shift now has the list of all the shifts in the perk
- gamepad is not supported (yet)
- List of altered vanilla files

[SETUP]
- append to _structure.lua or add var storages
- general rundown of what is there
- in-details desc of every part
check dragger_done_externally and if it goes false after you set it to true - this is the moment to swap
globals

[MACRO]
- by default, the state of ui is controlled by the state of controlcomp
- the entire data throughput is being passed via the "index.D" table
- runs from worldsstateentity and searched for the "index_ctrl" tag
- everything exists within the same lua context, so interconnected mp invs are doable
- keep in mind that any gui context can have only 1024 uids, by default there are two guis: fake, that has no mouse click blocking and real
- gameffects and uiicon are preprocessed
- material under pointer is being supplied automatically
- player inventories are hardcoded to be included
- to add new inventories, the system searches for "index_inventory" tag
- only the stuff that has a slot is displayed
- one can add a hidden item by setting slot value to -1,-1
- to make the item recalculate its slot pos, set slot value to -5,-5
- items have global kinds, that determine every single aspect of this item gui functionality
- if the child of detected inventory item is satisfied by some item kind - it will be an item
- all items are stored in a singular list, they are connected to inventories by a separate slot state list
- all inventories are stored in a separate table with all their data
- global modes allow to alter inv functionality in a major way and are an organizational tool to reduce clutter
- the "index_ctrl" entity has all the various settings set as varstoragecomps that are synched with modsettings
- mods is built around a table of preset z_layers to allow maximum consistency and compatibility
- there's applet strip that allows to intergrate external global mods in a highly compatible way
- gmods (why is needed + description of what is there and what can be added)
- index.D